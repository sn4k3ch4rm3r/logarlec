@startuml effects

title Effects
' left to right direction

package Effects {
	abstract Effect {
		- timeRemaining : double
		+ {abstract} applyToStudent(target : Student) : void
		+ {abstract} applyToTeacher(target : Teacher) : void
		+ setHolder(holder : GameObject) : void
	}

	class BeerEffect
	class RagEffect
	class GasEffect
	class MaskEffect
	class CleanEffect
	class JanitorEffect

	together {
		Effect <|-- BeerEffect
		Effect <|-- RagEffect
		Effect <|-- GasEffect
		Effect <|-- MaskEffect
		Effect <|-- CleanEffect
		Effect <|-- JanitorEffect
	}
	
}

interface Updatable {
	+ update(deltaTime : double) : void
}

abstract GameObject {
	+ {abstract} addItem(item : Item) : void
	+ {abstract} removeItem(item : Item) : void
	+ {abstract} applyEffect(effect : Effect) : void
	+ {abstract} interactTeacher(teacher : Teacher) : void
	+ {abstract} interactJanitor(janitor : Janitor) : void
	+ addEffect(effect : Effect) : void
	+ removeEffect(effect : Effect) : void
}

class Mask
class WetRag 

Updatable <|.- Effect

Effect "holder" o- GameObject
MaskEffect "item" o-- Mask
RagEffect "item" o-- WetRag

@enduml