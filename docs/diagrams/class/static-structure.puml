@startuml static-structure
abstract class Person {
    -name : String
    -numItems : int
    -room: Room
    +use(Item) 
    +pick(Item)
    +knockOut(int)
    +putDown(Item)
}
interface Item {
    {abstract} +use(Person)
    +drop()
}
class Room {
    -capacity : int
    -numOfPeople : int
    +enter(Person)
    +makeToxic(int)
    +cleaningClothUsed()
    +attack(Student)
    +leaveRoom(Person)
	+interact(Teacher)
	+interact(Student)
    +merge(Room)
    +split()
}
class Door {
    +use(person : Person, from : Room)
}
class Transistor {
	+link(Transistor)
}
class Camambert {
    -isOpen : boolean
}
class BeerBottle {
    -effectTime : int
}
class CodeOfStudies {
    -numUse : int
}
class BoardCleaningCloth {
}
class Mask {
    -effectTime : int
    -numUse : int
}
class SlideRule {
}

class Teacher {
    +enteredRoom()
}
class Student {
    +beingAttacked(Teacher)
    +enteredRoom()
}

 Person <|-- Student
 Person <|-- Teacher
 Room *-- Person
 Room *-- Item
 Room *- Door
 Room -o Door
 Room --o Person
 Transistor --o Transistor

 Person "0..5"*-- Item
 Item <|.up- CodeOfStudies
 Item <|.up- SlideRule
 Item <|.up- Transistor
 Item <|.left- BeerBottle
 Item <|.down-- BoardCleaningCloth
 Item <|.down-- Mask
 Item <|.down-- Camambert
'  Door <|-- Transistor
@enduml